AWSTemplateFormatVersion: 2010-09-09
Description: Creating RDS 


Parameters:
   NetworkStack:
     Type: String
     Default: "network-stack"
   Environment:
     Type: String
     Default: "Production"
  
Conditions:
  IsProd: !Equals [ !Ref Environment, "Test" ]
Resources: 
  RDSSubnetGroup: 
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: Oracle Subnet Group
      DBSubnetGroupName: RDSSubnetGroup
      SubnetIds: 
        - !ImportValue network-stackPublicSubnet1Id                                     #importing export key directly from another stack
        - { "Fn::ImportValue" : {"Fn::Sub": "${NetworkStack}PublicSubnet2Id" } }        # other way around
      Tags: 
        - Key: BU
          Value: ERAS
        - Key: Name
          Value: RDSSubnetGroup
          
  RDSParameterGroup:
    Type: 'AWS::RDS::DBParameterGroup'
    Properties:
      DBParameterGroupName : RDSParameterGroup
      Description: RDS Parameter Group
      Family: oracle-se2-19
      Parameters:
        cursor_sharing: force
        open_cursors: 200
        
  RDSOptionGroup:   
    Type: AWS::RDS::OptionGroup
    Properties:
      EngineName: oracle-se2
      MajorEngineVersion: 19
      OptionGroupDescription: Oracle RDS Option group
      OptionGroupName: RDSOptionGroup
      OptionConfigurations:
        - OptionName: STATSPACK
        - OptionName: UTL_MAIL
        - OptionName: Timezone  
          OptionSettings:
            - Name: TIME_ZONE
              Value: UTC 
  

      



     




############## What was the critical learning outcome?
# Say you created a db with hard coded password "pass123#. Later you updated the template and included ASM in it. Now when you modify the stack with new template
# it will create a new password in ASM. But it will automatically sync with DB. DB will continue to have old password. You have to manually sync the password 
# with alter user command. Once it is synced, future rotations will automatically sync otherwise rotations will fail.
