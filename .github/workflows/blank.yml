# This is a basic workflow to help you get started with Actions

name: Oracle-Sales-RDS-Stack-Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: 'Is evaluation needed?'
        required: true
        default: 'Yes'
        type: choice
        options:
          - Yes
          - No


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  Template-Validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!
  # This workflow contains a single job called "build"
  Eval-Create-Changeset:
    needs: [ Template-Validation ]
    environment: evaluation
    if: (github.events.inputs.evaluation == 'Yes')
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

  Eval-Deploy-Changeset:
    needs: [Eval-Create-Changeset ]
    if: always() && (github.event.input.evaluation == 'Yes' && needs.Eval-Create-Changeset.result == 'success') && (needs.Template-Validation.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!

          
  Development-Create-changeset:
    needs: [ Eval-Deploy-Changeset ]
    if: always() && ( needs.Eval-Create-Changeset.result == 'skipped' ||  needs.Eval-Deploy-Changeset.result == 'success') && ( needs.Template-Validation.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!

          
  Development-Deploy-changeset:
    needs: [ Development-Create-changeset ]
    if: always() && (needs.Development-Create-changeset.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!
 

  Ftest-Create-Changeset:
    needs: [ Development-Deploy-changeset ]
    if: always() && (needs.Development-Deploy-changeset.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!



  Ftest-Deploy-changeset:
    needs: [ Ftest-Create-Changeset ]
    if: always() && (needs.Ftest-Create-Changeset.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!
 


  Stage-Create-Changeset:
    needs: [ Ftest-Deploy-changeset ]
    if: always() && (needs.Ftest-Deploy-changeset.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!



  Stage-Deploy-changeset:
    needs: [ Stage-Create-Changeset ]
    if: always() && (needs.Stage-Create-Changeset.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!




  Ptest-Create-Changeset:
    needs: [ Stage-Deploy-changeset ]
    if: always() && (needs.Stage-Deploy-changeset.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!



  Ptest-Deploy-changeset:
    needs: [ Ptest-Create-Changeset ]
    if: always() && (needs.Ptest-Create-Changeset.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!



  Prod-Create-Changeset:
    needs: [ Ptest-Deploy-changeset ]
    if: always() && (needs.Ptest-Deploy-changeset.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!



  Prod-Deploy-changeset:
    needs: [ Prod-Create-Changeset ]
    if: always() && (needs.Prod-Create-Changeset.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: echo Hello, world!

